{"version":3,"sources":["Utils.js","Thermodynamics.js","generatePlotLineData.js","actions/index.js","actions/setPreset.js","components/ParameterField.js","components/StepListItem.js","components/StepList.js","components/ThermodynamicsPlot.js","assets/logo512.png","components/App.js","reducers/index.js","index.js"],"names":["hasDefinedKey","object","key","undefined","hasUndefinedKey","numToSSColumn","num","t","s","String","fromCharCode","getPreviousIndex","index","state","previousStepIndex","steps","length","getNextIndex","nextStepIndex","R","InsufficientConstraintsError","Error","IncompatibleConstraintsError","flagsForKeysInPoint","point","temperature","volume","pressure","solvePVT","pointConstraints","system","Object","assign","hasT","hasV","hasP","JSON","stringify","computedT","moles","Math","abs","_computeEntropyCalculationComponent","entropyCalculationComponent","pow","isochoricHeatCapacity","_PvtFromEntropyCalculationComponent","component","Thermodynamics","solveEntropyChange","stepConstraints","step","hasDeltaS","A","B","X","hasA","hasB","pressure_1","volume_1","temperature_1","pressure_2","volume_2","temperature_2","_extractPointsFromStep","point1","point2","exp","entropyChange","computedX","log","generatePlotLineDataPV","generatePlotLineData","_getLinePointsPV","generatePlotLineDataST","_getLinePointsST","_getLinePoints","res","indexNext","push","_getXYPV","x","y","getEntropy","staticEntropy","entropy","_getXYST","type","power","entropies","linspace","map","volumes","c","vol","startValue","stopValue","cardinality","arr","i","steps_updateProperties","properties","groupBy","newProperties","setPreset","preset","action","newSteps","ParameterField","label","value","readOnly","updateValue","updateKey","text","React","useState","localValue","setLocalValue","updateLocalValue","onChangeParam","useCallback","newVal","parseFloat","pointChanges","zeroCheck","includes","isNaN","useEffect","timeoutRef","setTimeout","clearTimeout","className","onBlur","onChange","e","target","disabled","DropDown","setValue","Form","Dropdown","search","selection","options","data","StepListItem","setStep","deleteStep","deleteDisabled","entropyReadOnly","stepUpdateFunction","param","deleteButtonParams","size","icon","onClick","negative","firstLinefieldProperties","Button","item","work","heat","SystemStatsTable","refrigerationEfficiency","refrigerationCOP","toFixed","heatingEfficiency","heatingCOP","thermalEfficiency","Table","collapsing","Body","Row","Cell","heatIn","heatOut","workNet","connect","present","canUndo","past","canRedo","future","steps_add","newStep","steps_reorder","newOrder","steps_delete","steps_reverse","system_setParams","params","isochoricHeatCapacityR","onUndo","UndoActionCreators","undo","onRedo","redo","showHelp","setShowHelp","presetValue","setPresetValue","popupRef","useRef","lastStep","disableDelete","document","body","addEventListener","ctrlKey","Popup","trigger","id","placeholder","content","position","open","primary","labelPosition","Icon","name","list","setList","filter","handle","preventOnFilter","chosenClass","steplistitem","ref","offset","popper","reference","placement","console","current","top","getBoundingClientRect","window","innerHeight","DraggablePoint","canvasDraggable","datum","mouseLoc","posSetter","draggable","setDraggable","hover","setHover","cx","cy","r","fill","onMouseDown","onMouseOver","onMouseOut","xkey","ykey","xlabel","ylabel","dataPointsGenerator","minDomain","setCanvasDraggable","setMouseLoc","minX","setMinX","maxX","setMaxX","maxY","setMaxY","update","dataLines","dataPoints","maxDomain","getMaxY","max","arrayX","min","style","width","height","padding","bottom","left","right","events","eventHandlers","onMouseUp","containerComponent","onCursorChange","props","cursorComponent","line","interpolation","stroke","dataComponent","labels","labelComponent","dx","textAnchor","verticalAnchor","axisLabel","dependentAxis","App","showAbout","setShowAbout","Header","Image","circular","src","logo","floated","as","href","on","onOpen","onClose","Provider","fontSize","Node","formula","inline","ThermodynamicsPlot","initialState","_applySubsequentPointConstraintsAtIndex","applyConstraintsFunc","getSubsequentIndex","subStepIndex","subsubStepIndex","subStep","subStepConstrained","_steps_replaceAtIndex","_applyNextPointConstraintsAtIndex","_applyStepTypeConstraintsToNextPoint","_applyPreviousPointConstraintsAtIndex","_applyStepTypeConstraintsToPreviousPoint","steps_update","checkStepTypeIsValid","startIndex","_forEachStep","lambda","condition","_operateOnSubsequentUntilCondition","_operateOnPreviousUntilCondition","_operateOnNextUntilCondition","_generateRTSorSignalCondition","nextIndex","nextStep","_getEntropyChange","stepEntropy","_getStepEntropy","_recalculateEntropyAtIndex","workIn","workOut","heatNet","_calculateHeatWorkTotal","_calculateHeatWorkAtIndex","slice","thermodynamicSystemReducer","_markUndefinedOneUnspecifiedPvtParameter","_updateAllSteps","newState","_recalculateTemperatureAtIndex","breakCondition","_applyStepTypeConstraintsToSubsequentPoint","subsubStep","refStep","secondRefStep","_applyConstraintsFromIsentropicAsNeighbour","entropyChangeBefore","stepEntropyConstraints","stepSolution","constraint","entropyStepConstraints","entropyStepRes","nextNextStep","previousStep","previousPreviousStep","numberOfConstraints","forEach","subsequentIndexFinder","store","createStore","undoable","currentState","previousHistory","dispatch","clearHistory","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e94cbc12.chunk.js","sourcesContent":["export const hasDefinedKey = (object,key) => {\r\n    return key in object && object[key] !== undefined\r\n}\r\n\r\nexport const hasUndefinedKey = (object,key) => {\r\n    return key in object && object[key] === undefined\r\n}\r\n\r\nexport function numToSSColumn(num){\r\n    let s = '', t;\r\n  \r\n    while (num > 0) {\r\n      t = (num - 1) % 26;\r\n      s = String.fromCharCode(65 + t) + s;\r\n      num = (num - t)/26 | 0;\r\n    }\r\n    return s || undefined;\r\n}\r\n\r\nexport function getPreviousIndex(index,state){\r\n    var previousStepIndex = index - 1\r\n    if (previousStepIndex === -1){previousStepIndex = state.steps.length - 1}\r\n    return previousStepIndex\r\n}\r\n\r\nexport function getNextIndex(index, state) {\r\n    var nextStepIndex = index + 1\r\n    if (nextStepIndex === state.steps.length) { nextStepIndex = 0} \r\n    return nextStepIndex\r\n}","import { hasDefinedKey } from \"./Utils\"\r\n\r\nconst R = 8.3145\r\n\r\nclass InsufficientConstraintsError extends Error {}\r\nclass IncompatibleConstraintsError extends Error {}\r\n\r\nconst flagsForKeysInPoint = (point) =>{\r\n    const hasT = 'temperature' in point && point.temperature !== undefined\r\n    const hasV = 'volume' in point && point.volume !== undefined\r\n    const hasP = 'pressure' in point && point.pressure !== undefined\r\n    return [hasT,hasV,hasP]\r\n}\r\n\r\nconst solvePVT = (pointConstraints,system) => {\r\n    const point = Object.assign({},pointConstraints)\r\n    const [hasT,hasV,hasP] = flagsForKeysInPoint(point)\r\n\r\n    if (hasT + hasP + hasV < 2){\r\n        throw new InsufficientConstraintsError(\r\n            `Must specify two of the constraints in point: ${JSON.stringify(point)}`\r\n        );\r\n    }\r\n    if (hasT && hasP && hasV){\r\n        const computedT = point.pressure * point.volume / (R * system.moles)\r\n        if (Math.abs(computedT - point.temperature) > 0.0001){\r\n            throw new IncompatibleConstraintsError(\r\n                `Point ${JSON.stringify(point)} is not a valid solution to the PVT equation`\r\n            )\r\n        }\r\n        return point\r\n    }\r\n\r\n    if (!hasT && hasP && hasV){\r\n        point.temperature = point.pressure * point.volume / (R * system.moles)\r\n    }\r\n    if (!hasV && hasP && hasT){\r\n        point.volume = point.temperature * R * system.moles / point.pressure\r\n    }\r\n    if (!hasP && hasV && hasT){\r\n        point.pressure = point.temperature * R * system.moles / point.volume\r\n    }\r\n    return point\r\n}\r\n\r\nconst _computeEntropyCalculationComponent = (pointConstraints,system) =>{\r\n    var point = Object.assign({},pointConstraints)\r\n    const [hasT,hasV,hasP] = flagsForKeysInPoint(point)\r\n\r\n    if (hasT + hasV + hasP === 0){\r\n        throw new InsufficientConstraintsError(\r\n            \"Must provide atleast one constraint (P V or T) for each point\"\r\n        )\r\n    }\r\n    if (hasT + hasV + hasP > 1){\r\n        point = solvePVT(point,system)\r\n        point.entropyCalculationComponent = (\r\n            Math.pow(point.pressure,system.isochoricHeatCapacity) *\r\n            Math.pow(point.volume,system.isochoricHeatCapacity + R)\r\n        )\r\n    }\r\n    return point\r\n}\r\n\r\nconst _PvtFromEntropyCalculationComponent = (component,pressure,volume,temperature,system) =>{\r\n    if (temperature !== undefined){\r\n        volume = Math.pow(\r\n            component/Math.pow(temperature * system.moles * R,system.isochoricHeatCapacity),\r\n            1/R\r\n        )\r\n    }else if (volume !== undefined){\r\n        pressure = Math.pow(\r\n            component/Math.pow(volume,system.isochoricHeatCapacity+R),\r\n            1/system.isochoricHeatCapacity\r\n        )\r\n    }else if (pressure !== undefined){\r\n        volume = Math.pow(\r\n            component/Math.pow(pressure,system.isochoricHeatCapacity),\r\n            1/(system.isochoricHeatCapacity + R)\r\n        )\r\n    }\r\n    return {pressure, volume, temperature}\r\n\r\n}\r\n\r\nconst _extractPointsFromStep = (step) => {\r\n    var point1 = {\r\n        pressure: step.pressure_1,\r\n        volume: step.volume_1,\r\n        temperature: step.temperature_1\r\n    }\r\n    var point2 = {\r\n        pressure: step.pressure_2,\r\n        volume: step.volume_2,\r\n        temperature: step.temperature_2\r\n    }\r\n    return [point1, point2]\r\n}\r\n\r\nconst solveEntropyChange = (stepConstraints,system) => {\r\n    const step = Object.assign({},stepConstraints)\r\n    const hasDeltaS = hasDefinedKey(step,'entropyChange')\r\n    const hasP1 = hasDefinedKey(step,'pressure_1')\r\n    const hasV1 = hasDefinedKey(step,'volume_1')\r\n    const hasT1 = hasDefinedKey(step,'temperature_1')\r\n    const hasP2 = hasDefinedKey(step,'pressure_2')\r\n    const hasV2 = hasDefinedKey(step,'volume_2')\r\n    const hasT2 = hasDefinedKey(step,'temperature_2')\r\n    const numberOfConstraints = hasDeltaS + hasP1 + hasV1 + hasT1 + hasP2 + hasV2 + hasT2\r\n\r\n    if (numberOfConstraints < 4){\r\n        throw new InsufficientConstraintsError('Must specify atleast 4 constraints')\r\n    }\r\n\r\n    var [point1, point2] = _extractPointsFromStep(step)\r\n\r\n    var A, B, X, hasA, hasB\r\n    hasA = hasB = false\r\n    \r\n    point1 = _computeEntropyCalculationComponent(point1,system)\r\n    if ('entropyCalculationComponent' in point1){\r\n        B = point1.entropyCalculationComponent\r\n        hasB = true\r\n    }\r\n    point2 = _computeEntropyCalculationComponent(point2,system)\r\n    if ('entropyCalculationComponent' in point2){\r\n        A = point2.entropyCalculationComponent\r\n        hasA = true\r\n    }\r\n\r\n    X = Math.exp(step.entropyChange/system.moles)\r\n\r\n    if (hasDeltaS && hasA && hasB){\r\n        var computedX = A / B\r\n        if (Math.abs(computedX - X) > 0.0001){\r\n            throw new IncompatibleConstraintsError(\r\n                `Step ${JSON.stringify(stepConstraints)} is not a valid solution for the entropy change,\r\n                X = ${X}, computedX = ${computedX}`\r\n            )\r\n        }\r\n    }\r\n\r\n    if (!hasDeltaS && hasA && hasB){\r\n        X = A / B\r\n        step.entropyChange = Math.log(X) * system.moles\r\n    }\r\n    if (!hasA && hasDeltaS && hasB){\r\n        A = X*B\r\n        point2 = _PvtFromEntropyCalculationComponent(\r\n            A,step.pressure_2,step.volume_2,step.temperature_2,system\r\n        )\r\n    }\r\n    if (!hasB && hasDeltaS && hasA){\r\n        B = A/X\r\n        point1 = _PvtFromEntropyCalculationComponent(\r\n            B,step.pressure_1,step.volume_1,step.temperature_1,system\r\n        )\r\n    }\r\n\r\n    point1 = solvePVT(point1,system)\r\n    point2 = solvePVT(point2, system)\r\n\r\n    step.temperature_1 = point1.temperature\r\n    step.pressure_1 = point1.pressure\r\n    step.volume_1 = point1.volume\r\n    step.temperature_2 = point2.temperature\r\n    step.pressure_2 = point2.pressure\r\n    step.volume_2 = point2.volume\r\n    \r\n    return step\r\n}\r\n\r\nconst Thermodynamics = {\r\n    R, \r\n    solvePVT,\r\n    solveEntropyChange,\r\n    flagsForKeysInPoint,\r\n    InsufficientConstraintsError, \r\n    IncompatibleConstraintsError\r\n}\r\n\r\nexport default Thermodynamics","import Thermodynamics from './Thermodynamics'\r\nimport { hasDefinedKey } from './Utils'\r\n\r\nexport const generatePlotLineDataPV = (steps,system) =>{\r\n    return generatePlotLineData(steps,system,_getLinePointsPV)\r\n}\r\n\r\nexport const generatePlotLineDataST = (steps, system) => {\r\n    return generatePlotLineData(steps,system,_getLinePointsST)\r\n}\r\n\r\nconst generatePlotLineData = (steps,system,_getLinePoints) =>{\r\n    const res = []\r\n    for (var index=0; index<steps.length-1; index++){\r\n        var indexNext = index + 1\r\n        res.push(_getLinePoints(steps, index, indexNext,system))\r\n    }\r\n    res.push(_getLinePoints(steps, steps.length-1, 0,system))\r\n    return res\r\n}\r\n\r\nconst _getXYPV = (step) => {\r\n    return {x: step.volume, y: step.pressure}\r\n}\r\n\r\nconst getEntropy = (step) => {\r\n    if (hasDefinedKey(step,'staticEntropy')){\r\n        return step.staticEntropy\r\n    }\r\n    return step.entropy\r\n}\r\n\r\nconst _getXYST = (step) => {\r\n    return {x: getEntropy(step), y: step.temperature}\r\n}\r\n\r\nfunction _getLinePointsST(steps,index,indexNext,system) {\r\n    if (steps[index].type === 'isothermal' || steps[index].type === 'isentropic'){\r\n        return[\r\n            _getXYST(steps[index]), _getXYST(steps[indexNext])\r\n        ]\r\n    }\r\n    const entropies = linspace(getEntropy(steps[index]),getEntropy(steps[indexNext]),100)\r\n    if (steps[index].type === 'isochoric' || steps[index].type === 'isobaric'){\r\n        var power\r\n        if (steps[index].type === 'isochoric'){\r\n            power = system.isochoricHeatCapacity\r\n        }\r\n        if (steps[index].type === 'isobaric'){\r\n            power = system.isochoricHeatCapacity + Thermodynamics.R\r\n        }\r\n        const points = entropies.map((entropy)=>{\r\n            const x = Math.exp((entropy-getEntropy(steps[index]))/system.moles) * Math.pow(\r\n                steps[index].temperature,power\r\n            )\r\n            return {y: Math.pow(x,1/power), x:entropy}\r\n        })\r\n        return points\r\n    }\r\n    return [_getXYST(steps[index]),]\r\n}\r\n\r\nfunction _getLinePointsPV(steps, index, indexNext,system) {\r\n    if (steps[index].type === 'isobaric' || steps[index].type === 'isochoric'){\r\n        return [\r\n            _getXYPV(steps[index]), _getXYPV(steps[indexNext])\r\n        ]\r\n    }\r\n    const volumes = linspace(steps[index].volume,steps[indexNext].volume,100)\r\n    if (steps[index].type === 'isothermal'){\r\n        const c = steps[index].pressure * steps[index].volume\r\n        \r\n        const points = volumes.map((vol)=>{\r\n            return {x: vol, y:c / vol}\r\n        })\r\n        return points\r\n    }\r\n    if (steps[index].type === 'isentropic'){\r\n        const c = Math.pow(\r\n            steps[index].pressure,system.isochoricHeatCapacity\r\n        ) * Math.pow(\r\n            steps[index].volume,system.isochoricHeatCapacity + Thermodynamics.R\r\n        )\r\n        const points = volumes.map((vol)=>{\r\n            return {x: vol, y:(\r\n                Math.pow(c / Math.pow(vol,system.isochoricHeatCapacity + Thermodynamics.R),1/system.isochoricHeatCapacity)\r\n            )}\r\n        })\r\n        return points\r\n    }\r\n    return [\r\n        _getXYPV(steps[index])\r\n    ]\r\n    \r\n}\r\n\r\nfunction linspace(startValue, stopValue, cardinality) {\r\n    var arr = [];\r\n    var step = (stopValue - startValue) / (cardinality - 1);\r\n    for (var i = 0; i < cardinality; i++) {\r\n        arr.push(startValue + (step * i));\r\n    }\r\n    return arr;\r\n}\r\n","import Thermodynamics from \"../Thermodynamics\"\r\nimport { getPreviousIndex, hasDefinedKey } from \"../Utils\"\r\n\r\nexport const steps_add = (index, step) => {\r\n    return {\r\n        type: 'steps/add',\r\n        index: index,\r\n        newStep: step,\r\n    }\r\n}\r\n\r\nexport const steps_update = (index, step) => {\r\n    return {\r\n        type: 'steps/update',\r\n        index: index,\r\n        newStep: step,\r\n    }\r\n}\r\n\r\nexport const steps_updateProperties = (index, properties,groupBy=null) => {\r\n    return {\r\n        type: 'steps/updateProperties',\r\n        index: index,\r\n        newProperties: properties,\r\n        groupBy: groupBy\r\n    }\r\n}\r\n\r\nexport const steps_delete = (index) => {\r\n    return {\r\n        type: 'steps/delete',\r\n        index: index,\r\n    }\r\n}\r\n\r\nexport const system_setParams = (params) => {\r\n    if (hasDefinedKey(params,'isochoricHeatCapacityR')){\r\n        params.isochoricHeatCapacity = params.isochoricHeatCapacityR *Thermodynamics.R\r\n    }\r\n    return{\r\n        type: 'system/setParams',\r\n        params: params,\r\n    }\r\n}\r\n\r\nexport const steps_reorder = (newOrder) => {\r\n    return{\r\n        type: 'steps/setAll',\r\n        newSteps: newOrder,\r\n        groupBy: 'reorder'\r\n    }\r\n}\r\n\r\nexport const steps_reverse = (steps) => {\r\n    var newSteps = []\r\n    newSteps.push({...steps[0],type: steps[(getPreviousIndex(0,{steps: steps}))].type})\r\n    for (var i=steps.length-1; i>0; i--){\r\n        newSteps.push({...steps[i],type: steps[(getPreviousIndex(i,{steps: steps}))].type})\r\n    }\r\n    return{\r\n        type: 'steps/setAll',\r\n        newSteps: newSteps\r\n    }\r\n}","export const setPreset = (preset) => {\r\n    var action = {type: 'steps/setAll'}\r\n    if (preset === 'carnotCycle'){\r\n        action.newSteps = [\r\n            {\r\n                staticEntropy: 1,\r\n                temperature: 500,\r\n                pressure: 2e5,\r\n                type: 'isothermal',\r\n            },{\r\n                temperature: 500,\r\n                pressure: 1e5,\r\n                type: 'isentropic'\r\n            },{\r\n                pressure: 100000,\r\n                temperature: 400,\r\n                type: 'isothermal'\r\n            },{\r\n                temperature: 400,\r\n                pressure: 200000,\r\n                type: 'isentropic',\r\n            }\r\n        ]\r\n    }\r\n    if (preset === 'isobaricIsochoric'){\r\n        action.newSteps = [\r\n            {\r\n                staticEntropy: 0,\r\n                pressure: 1e5,\r\n                volume: 0.05,\r\n                type: 'isochoric'\r\n            },{\r\n                pressure: 2e5,\r\n                volume: 0.05,\r\n                type: 'isobaric'\r\n            },{\r\n                pressure: 2e5,\r\n                volume: 0.15,\r\n                type: 'isochoric'\r\n            },{\r\n                pressure: 1e5,\r\n                volume: 0.15,\r\n                type: 'isobaric'\r\n            }\r\n        ]\r\n    }\r\n    return action\r\n}","import React, { useCallback, useEffect } from 'react';\r\nimport './ParameterField.css';\r\n\r\nconst ParameterField = ({label,value,readOnly,updateValue,updateKey,text}) =>{\r\n\r\n    var [localValue, setLocalValue] = React.useState(value)\r\n\r\n    var updateLocalValue = () => {}\r\n    if (!readOnly){\r\n        updateLocalValue = (value) => {\r\n            if (value === ''){\r\n                setLocalValue('')\r\n            }else{\r\n                setLocalValue(value)\r\n            }\r\n        }\r\n    }\r\n\r\n    const onChangeParam = useCallback(() => {\r\n        if (localValue !== '' && localValue !== value){\r\n            var newVal = parseFloat(localValue)\r\n            var pointChanges = {}\r\n            pointChanges[updateKey] = newVal\r\n            const zeroCheck = (\r\n                ['pressure','volume','temperature','moles'].includes(updateKey) && newVal === 0\r\n            )\r\n            if (!isNaN(newVal) && !zeroCheck){\r\n                updateValue(pointChanges)\r\n            }else{\r\n                setLocalValue(value)\r\n            }\r\n            \r\n        }\r\n    },[localValue,updateValue,updateKey,value])\r\n\r\n    useEffect(()=>{\r\n        setLocalValue(value)\r\n    },[value])\r\n\r\n    useEffect(()=>{\r\n        var timeoutRef = setTimeout(()=>{\r\n            onChangeParam()\r\n        },500)\r\n        return(()=>{\r\n            clearTimeout(timeoutRef)\r\n        })\r\n    },[localValue,onChangeParam])\r\n\r\n    return(\r\n        <div className='field parameter-field'>\r\n            <label className='parameter-field-label'>{label}</label>\r\n            <input \r\n                type='text'\r\n                className={`parameter-field-value no-drag parameter-${updateKey}`} \r\n                value={localValue} \r\n                readOnly={readOnly}\r\n                onBlur={onChangeParam}\r\n                onChange={(e)=>{updateLocalValue(e.target.value)}}\r\n                disabled={readOnly}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ParameterField","import React from 'react';\r\nimport ParameterField from './ParameterField';\r\nimport { Button, Form } from 'semantic-ui-react';\r\nimport './StepListItem.css';\r\nimport { hasDefinedKey } from '../Utils';\r\nimport { numToSSColumn } from '../Utils';\r\n\r\nconst DropDown = ({value,setValue}) => {\r\n\r\n    const dropdownOptions = [\r\n        {key: 'none', text:'(None)', value: 'none'},\r\n        {key: 'isobaric', text:'Isobaric', value:'isobaric'},\r\n        {key: 'isochoric', text:'Isochoric', value:'isochoric'},\r\n        {key: 'isothermal', text:'Isothermal', value:'isothermal'},\r\n        {key: 'isentropic', text:'Isentropic', value:'isentropic'},\r\n    ]\r\n\r\n    return(\r\n        <Form.Dropdown \r\n            search selection \r\n            options={dropdownOptions} \r\n            label='Step Type' \r\n            onChange={(e,data)=>{setValue(data.value)}}\r\n            value={value}\r\n            className='no-drag'\r\n        />\r\n    )\r\n}\r\n\r\nconst StepListItem = ({step,index,setStep,deleteStep,deleteDisabled}) => {\r\n\r\n    var entropyReadOnly = true\r\n\r\n    if (hasDefinedKey(step,'staticEntropy')){\r\n        step.entropy = step.staticEntropy\r\n        entropyReadOnly = false\r\n    }\r\n    if (!hasDefinedKey(step,'entropy')){\r\n        step.entropy = ''\r\n    }\r\n\r\n    if (!hasDefinedKey(step,'entropyChange')){\r\n        step.entropyChange = ''\r\n    }\r\n\r\n    const stepUpdateFunction = (param) =>{\r\n        setStep(index,param)\r\n    }\r\n\r\n    var deleteButtonParams = {\r\n        size: 'small',\r\n        icon: 'trash',\r\n        onClick: ()=>{deleteStep(index)},\r\n        className: 'no-drag',\r\n    }\r\n\r\n    if (deleteDisabled){\r\n        deleteButtonParams.disabled = true\r\n    }else{\r\n        deleteButtonParams.negative = true\r\n    }\r\n\r\n    const firstLinefieldProperties = [\r\n        {\r\n            label: 'Pressure (Pa)',\r\n            key: 'pressure',\r\n            readOnly: false,\r\n            updateKey: 'pressure',\r\n        },{\r\n            label: 'Volume (m^3)',\r\n            key: 'volume',\r\n            readOnly: false,\r\n            updateKey: 'volume',\r\n        },{\r\n            label: 'Temperature (K)',\r\n            key: 'temperature',\r\n            readOnly: false,\r\n            updateKey: 'temperature',\r\n        },{\r\n            label: 'Entropy (J/K)',\r\n            key: 'entropy',\r\n            readOnly: entropyReadOnly,\r\n            updateKey: 'staticEntropy'\r\n        }\r\n    ]\r\n\r\n    return(\r\n        <div className='ui container step-list-item'>\r\n            <div className='ui large form'>\r\n                <div>\r\n                    <h4 className='item-title'>\r\n                        <i className='pad-right'>Point {numToSSColumn(index+1)}</i>\r\n                        <Button \r\n                            {...deleteButtonParams}\r\n                        ></Button>\r\n                    </h4>\r\n                </div>\r\n                <div className='fields'>\r\n                    {firstLinefieldProperties.map((item)=>{return(\r\n                        <ParameterField \r\n                            label={item.label}\r\n                            value={step[item.key]}\r\n                            key={item.label}\r\n                            readOnly={item.readOnly}\r\n                            updateValue={stepUpdateFunction}\r\n                            updateKey={item.updateKey}\r\n                        />\r\n                    )})}\r\n                </div>\r\n                <div className='fields'>\r\n                    <div className='step-list-dropdown-wrapper'>\r\n                        <DropDown \r\n                            value={step.type}\r\n                            setValue={(value)=>{stepUpdateFunction({type: value})}}\r\n                        />\r\n                    </div>\r\n                    <ParameterField\r\n                        label='Entropy Change (J/K)'\r\n                        value={step.entropyChange}\r\n                        key='entropyChange'\r\n                        readOnly={true}\r\n                        updateKey='entropyChange'\r\n                        updateValue={stepUpdateFunction}\r\n                    />\r\n                    <ParameterField\r\n                        label='Work done (J)'\r\n                        value={step.work}\r\n                        key='work'\r\n                        readOnly={true}\r\n                        updateValue={stepUpdateFunction}\r\n                        updateKey=''\r\n                    />\r\n                    <ParameterField\r\n                        label='Heat supplied (J)'\r\n                        value={step.heat}\r\n                        key='heat'\r\n                        readOnly={true}\r\n                        updateValue={stepUpdateFunction}\r\n                        updateKey=''\r\n                    />\r\n                </div>\r\n                <hr/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StepListItem","import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Button, Form, Table, Icon, Popup } from 'semantic-ui-react';\r\nimport { steps_updateProperties,steps_add,steps_reorder,steps_delete, steps_reverse, system_setParams } from '../actions';\r\nimport { ActionCreators as UndoActionCreators } from 'redux-undo'\r\nimport { setPreset } from '../actions/setPreset';\r\nimport StepListItem from './StepListItem'\r\nimport { ReactSortable } from 'react-sortablejs';\r\nimport './StepListItem.css';\r\nimport ParameterField from './ParameterField';\r\nimport Thermodynamics from '../Thermodynamics';\r\n\r\nconst SystemStatsTable = ({system}) => {\r\n    const refrigerationEfficiency = (system.refrigerationCOP*100).toFixed(2)\r\n    const heatingEfficiency = (system.heatingCOP*100).toFixed(2)\r\n    const thermalEfficiency = (system.thermalEfficiency * 100).toFixed(2)\r\n\r\n    return(\r\n        <Table collapsing size='large'>\r\n                    <Table.Body>\r\n                        <Table.Row>\r\n                            <Table.Cell>Heat In</Table.Cell>\r\n                            <Table.Cell>{system.heatIn.toFixed(2)} J</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Heat Out</Table.Cell>\r\n                            <Table.Cell>{system.heatOut.toFixed(2)} J</Table.Cell>\r\n                        </Table.Row>\r\n                        <Table.Row>\r\n                            <Table.Cell>Net Work</Table.Cell>\r\n                            <Table.Cell>{system.workNet.toFixed(2)} J</Table.Cell>\r\n                        </Table.Row>\r\n                        {refrigerationEfficiency > 0 ?\r\n                            <Table.Row>\r\n                                <Table.Cell>Refrigeration efficiency</Table.Cell>\r\n                                <Table.Cell>{refrigerationEfficiency} %</Table.Cell>\r\n                            </Table.Row>\r\n                        :null}\r\n                        {heatingEfficiency > 0 ?\r\n                            <Table.Row>\r\n                                <Table.Cell>Heating efficiency (heat pump)</Table.Cell>\r\n                                <Table.Cell>{heatingEfficiency} %</Table.Cell>\r\n                            </Table.Row>\r\n                        :null}\r\n                        {thermalEfficiency > 0 ?   \r\n                            <Table.Row>\r\n                                <Table.Cell>Thermal efficiency (engine)</Table.Cell>\r\n                                <Table.Cell>{thermalEfficiency} %</Table.Cell>\r\n                            </Table.Row>\r\n                        :null}\r\n                    </Table.Body>\r\n                </Table>\r\n    )\r\n}\r\n\r\nconst StepList = ({\r\n    steps,system,\r\n    steps_updateProperties,steps_add,steps_reorder,steps_delete,setPreset,steps_reverse,system_setParams,\r\n    canUndo,canRedo,onUndo,onRedo,\r\n    showHelp, setShowHelp\r\n}) => {\r\n    const [presetValue, setPresetValue] = React.useState('')\r\n    const popupRef = React.useRef()\r\n\r\n    const presetOptions = [\r\n        {\r\n            text: '',\r\n            value: '',\r\n            id: 'none'\r\n        },{\r\n            text: 'Carnot Cycle',\r\n            value: 'carnotCycle',\r\n            id: 'carnotCycle'\r\n        },{\r\n            text: 'Isobaric & Isochoric',\r\n            value: 'isobaricIsochoric',\r\n            id: 'isobaricIsochoric'\r\n        }\r\n    ]\r\n\r\n    useEffect(()=>{\r\n        if (presetValue !== ''){\r\n            setPreset(presetValue)\r\n            setPresetValue('')\r\n        }\r\n    },[presetValue,setPreset])\r\n\r\n    const lastStep = steps[steps.length - 1]\r\n\r\n    const disableDelete = steps.length > 1 ? false : true\r\n    if (disableDelete){steps_delete=()=>{}}\r\n\r\n    const addStep = () => {\r\n        steps_add(\r\n            -1,{\r\n                pressure: lastStep.pressure + 100, \r\n                volume: lastStep.volume + 0.2,\r\n                temperature: undefined,\r\n                type: 'none'\r\n            }\r\n        )\r\n    }\r\n\r\n    document.body.addEventListener('keydown',(e)=>{\r\n        if (e.key === 'z' && e.ctrlKey === true){\r\n            onUndo()\r\n        }\r\n        if (e.key === 'y' && e.ctrlKey === true){\r\n            onRedo()\r\n        }\r\n    })\r\n\r\n    return(\r\n        <div>\r\n            <div className='ui container'>\r\n                <div className='ui large form'>\r\n                    <div className='fields'>\r\n                        <Popup\r\n                            trigger={<div className='field'>\r\n                                <Form.Dropdown\r\n                                    search selection\r\n                                    options={presetOptions}\r\n                                    placeholder='Select a preset'\r\n                                    onChange={(e,data)=>{setPresetValue(data.value)}}\r\n                                    value={presetValue}\r\n                                    className=''\r\n                                />\r\n                            </div>}\r\n                            content={\"Various common cycles can be selected from available presets\"}\r\n                            position='top center'\r\n                            open = {showHelp}\r\n                            size='large'\r\n                        />\r\n                        <Popup\r\n                            trigger={\r\n                                <div className='field'>\r\n                                <Button \r\n                                    primary onClick={()=>{steps_reverse(steps)}}\r\n                                    className='button-fill-height'\r\n                                >\r\n                                    Reverse Cycle\r\n                                </Button>\r\n                                </div>\r\n                            }\r\n                            content='Swaps the order of points in the cycle, alternating between a heat engine or heat pump configuration'\r\n                            open={showHelp}\r\n                            size='large'\r\n                        />\r\n                        <div className='field'>\r\n                            <Button icon labelPosition='right' disabled={!canUndo} \r\n                                onClick={onUndo} className='button-fill-height'\r\n                            >\r\n                                Undo\r\n                                <Icon name='undo'/>\r\n                            </Button>\r\n                            <Button icon labelPosition='right' disabled={!canRedo} \r\n                                onClick={onRedo} className='button-fill-height'\r\n                            >\r\n                                Redo\r\n                                <Icon name='redo'/>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='fields'>\r\n                        <Popup\r\n                            trigger={\r\n                                <ParameterField \r\n                                    label= 'Moles of gas (mol)'\r\n                                    value={system.moles}\r\n                                    key='moles'\r\n                                    updateKey='moles'\r\n                                    updateValue={system_setParams}\r\n                                />\r\n                            }   \r\n                            content = \"System parameters can be updated by typing in the boxes\"\r\n                            open = {showHelp}\r\n                            position = 'left center'\r\n                            size='large'\r\n                        />\r\n                        <ParameterField \r\n                            label= 'Isochoric heat capacity (J/K)'\r\n                            value={system.isochoricHeatCapacity}\r\n                            key='isochoricHeatCapacity'\r\n                            updateKey='isochoricHeatCapacity'\r\n                            updateValue={system_setParams}\r\n                        />\r\n                        <ParameterField \r\n                            label= 'Isochoric heat capacity (R)'\r\n                            value={system.isochoricHeatCapacity/Thermodynamics.R}\r\n                            key='isochoricHeatCapacityR'\r\n                            updateKey='isochoricHeatCapacityR'\r\n                            updateValue={system_setParams}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <SystemStatsTable system={system}/>\r\n                <hr/>\r\n            </div>\r\n            <ReactSortable \r\n                list={steps} \r\n                setList={steps_reorder}\r\n                filter='.no-drag'\r\n                handle='.container'\r\n                preventOnFilter={false}\r\n                chosenClass='selected-list-item'\r\n            >\r\n                {steps.map((step,index)=>{\r\n                    const steplistitem = (<StepListItem \r\n                        step={step} \r\n                        index={index} \r\n                        setStep={steps_updateProperties}\r\n                        deleteStep={steps_delete}\r\n                        deleteDisabled={disableDelete}\r\n                    ></StepListItem>)\r\n                    return(\r\n                        <div className='item' key={index}>\r\n                            {index === 0 ? <Popup\r\n                                trigger={<div ref={popupRef}>{steplistitem}</div>}\r\n                                content={\"Each step can be dragged to reorder it in the list\"}\r\n                                open={showHelp}\r\n                                position='top center'\r\n                                size='large'\r\n                                offset={({popper,reference,placement})=>{\r\n                                    console.log(popupRef.current)\r\n                                    const top = popupRef.current.getBoundingClientRect().top\r\n                                    console.log(top - window.innerHeight)\r\n                                    if (top-window.innerHeight > 0){\r\n                                        return [0,top-window.innerHeight]\r\n                                    }\r\n                                    return [0,0]\r\n                                }}\r\n                            />:steplistitem}\r\n                        </div>\r\n                    )\r\n                })}\r\n            </ReactSortable>\r\n            <div className='ui container'>\r\n                <Button primary onClick={addStep}>Add step</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {...state.present, canUndo: state.past.length > 0, canRedo: state.future.length > 0}\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    steps_updateProperties,steps_add,steps_reorder,steps_delete,steps_reverse,setPreset,system_setParams,\r\n    onUndo: UndoActionCreators.undo,\r\n    onRedo: UndoActionCreators.redo\r\n})(StepList)","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { steps_updateProperties } from '../actions';\r\nimport {VictoryLine,VictoryChart,VictoryScatter, VictoryCursorContainer, VictoryLabel, VictoryAxis} from 'victory';\r\nimport { hasDefinedKey, numToSSColumn } from '../Utils';\r\n\r\nconst DraggablePoint = (params) =>{\r\n\r\n    var canvasDraggable = params.datum.canvasDraggable\r\n    var mouseLoc = params.datum.mouseLoc\r\n    var posSetter = params.datum.posSetter\r\n\r\n    var [draggable, setDraggable] = React.useState(false)\r\n    var [hover, setHover] = React.useState(false)\r\n\r\n    useEffect(()=>{\r\n        if (!canvasDraggable && draggable){\r\n            setDraggable(false)\r\n        }\r\n    },[canvasDraggable,draggable])\r\n\r\n    useEffect(()=>{\r\n        if (draggable){\r\n            posSetter(mouseLoc.x, mouseLoc.y)\r\n        }\r\n    },[mouseLoc,draggable,posSetter])\r\n\r\n    return(\r\n        <circle\r\n            cx={params.x}\r\n            cy={params.y}\r\n            r={4}\r\n            fill={(draggable || hover) ? 'gold':\"#c43a31\"}\r\n            onMouseDown={(e)=>{setDraggable(true)}}\r\n            onMouseOver={()=>{setHover(true)}}\r\n            onMouseOut={()=>{setHover(false)}}\r\n        />\r\n    )\r\n}\r\n\r\nconst Plot = ({\r\n    steps,system,steps_updateProperties,\r\n    xkey,ykey,xlabel,ylabel,\r\n    dataPointsGenerator\r\n}) =>{\r\n\r\n    for (var i=0; i<steps.length; i++){\r\n        if (hasDefinedKey(steps[i],'staticEntropy')){\r\n            steps[i].entropy = steps[i].staticEntropy\r\n        }\r\n    }\r\n\r\n    const [canvasDraggable,setCanvasDraggable] = React.useState(false)\r\n    const [mouseLoc, setMouseLoc] = React.useState({x: null, y: null})\r\n\r\n    const [minX, setMinX] = React.useState(0)\r\n    const [maxX, setMaxX] = React.useState(0.1)\r\n    const [maxY, setMaxY] = React.useState(500000)\r\n\r\n    const posSetter = (index) => {\r\n        return (x,y)=>{\r\n            var update = {}\r\n            if (xkey === 'entropy'){\r\n                if (hasDefinedKey(steps[index],'staticEntropy')){\r\n                    update.staticEntropy = x\r\n                }\r\n            }\r\n            update[xkey] = x\r\n            update[ykey] = y\r\n            var dragPointGroup = {index: index, xkey: xkey}\r\n            steps_updateProperties(index,update,dragPointGroup)\r\n        }\r\n    }\r\n    \r\n    var dataLines = dataPointsGenerator(steps,system)\r\n\r\n    var dataPoints = steps.map((step,index)=>{\r\n        return {\r\n            x:step[xkey],\r\n            y:step[ykey],\r\n            posSetter: posSetter(index), \r\n            canvasDraggable: canvasDraggable,\r\n            mouseLoc: mouseLoc,\r\n            index: index,\r\n        }\r\n    })\r\n\r\n    var minDomain\r\n    if (xkey === 'entropy'){\r\n        minDomain = {x:minX-(0.1*(maxX-minX)), y:0}\r\n    }else{\r\n        minDomain = {x: 0, y: 0}\r\n    }\r\n    var maxDomain = {x: maxX+(0.1*(maxX-minX)), y: maxY*1.1}\r\n\r\n    useEffect(()=>{\r\n        const getArrayX = () => {return steps.map((step)=>{return step[xkey]})}\r\n        const getMaxY = () => {return Math.max(...steps.map((step)=>{return step[ykey]}))}\r\n        const arrayX = getArrayX()\r\n        if (xkey === 'entropy'){\r\n            if (!canvasDraggable){\r\n                setMinX(Math.min(...arrayX))\r\n            }\r\n            if (canvasDraggable && mouseLoc.x < minX*1.06){\r\n                setMinX(Math.min(...arrayX))\r\n            }\r\n        }\r\n        if (!canvasDraggable){\r\n            setMaxX(Math.max(...arrayX))\r\n            setMaxY(getMaxY())\r\n        }\r\n        if (canvasDraggable && mouseLoc.x > maxX*1.06){\r\n            setMaxX(Math.max(...arrayX))\r\n        }\r\n        if (canvasDraggable && mouseLoc.y > maxY*1.06){\r\n            setMaxY(getMaxY())\r\n        }\r\n    },[steps,canvasDraggable,mouseLoc,maxX,maxY,minX,xkey,ykey])\r\n\r\n    return(\r\n        <div {...{style: {width: '100%', height: '100%'}}}>\r\n            <VictoryChart \r\n                height={500}\r\n                width={500}\r\n                padding={{top: 20, bottom: 60, left: 100, right: 20}}\r\n                minDomain = {minDomain}\r\n                maxDomain = {maxDomain}\r\n                events={[{\r\n                    target: 'parent',\r\n                    eventHandlers: {\r\n                        onMouseDown: ()=>{setCanvasDraggable(true)},\r\n                        onMouseUp: ()=>{setCanvasDraggable(false)},\r\n                    }\r\n                }]}\r\n                containerComponent={\r\n                    <VictoryCursorContainer\r\n                        onCursorChange={(value,props) => {\r\n                            if (value !== null){\r\n                                setMouseLoc({x:value.x,y:value.y})\r\n                            }\r\n                        }}\r\n                        cursorComponent={<div></div>}\r\n                    />\r\n                }\r\n            >\r\n                {dataLines.map((line)=>{\r\n                    return (<VictoryLine\r\n                        interpolation={'linear'} \r\n                        data={line}\r\n                        style={{ data: { stroke: \"#c43a31\" } }}\r\n                        key={line[0]}\r\n                    />)\r\n                })}\r\n                \r\n                <VictoryScatter \r\n                    data={dataPoints}\r\n                    dataComponent={\r\n                        <DraggablePoint />\r\n                    }\r\n                    labels={[]}\r\n                    labelComponent={\r\n                        <VictoryLabel\r\n                            text={({datum})=>{\r\n                                if (datum !== undefined){\r\n                                    return numToSSColumn(datum.index+1)\r\n                                }\r\n                            }}\r\n                            dx={10}\r\n                            textAnchor='middle'\r\n                            verticalAnchor = 'middle'\r\n                        />\r\n                    }\r\n                />\r\n                <VictoryAxis \r\n                    label={xlabel}\r\n                    style = {{axisLabel: {padding: 33}}}\r\n                />\r\n                <VictoryAxis \r\n                    dependentAxis\r\n                    label={ylabel}\r\n                    style = {{axisLabel: {padding: 78}}}\r\n                />\r\n            </VictoryChart>\r\n        </div>\r\n    )\r\n}\r\n\r\nvar mapStateToProps = (state)=>{\r\n    return(state.present)\r\n}\r\n\r\nexport default connect(mapStateToProps,{steps_updateProperties})(Plot)","export default __webpack_public_path__ + \"static/media/logo512.7e883426.png\";","import React from 'react';\r\nimport { generatePlotLineDataPV, generatePlotLineDataST } from '../generatePlotLineData';\r\nimport StepList from './StepList';\r\nimport ThermodynamicsPlot from './ThermodynamicsPlot';\r\nimport './App.css'\r\nimport { Button, Icon, Header, Menu, Image, Popup } from 'semantic-ui-react';\r\nimport logo from '../assets/logo512.png'\r\nimport MathJax from 'react-mathjax'\r\n\r\nconst App = () => {\r\n\r\n    const [showHelp, setShowHelp] = React.useState(false)\r\n    const [showAbout, setShowAbout] = React.useState(false)\r\n    \r\n    return(\r\n        <div>\r\n            <div className='ui container'>\r\n                <div id=\"header-container\">\r\n                    <Header size='huge'>\r\n                        <Image circular src={logo}/>\r\n                        Thermodynamic Cycle Solver\r\n                        <Button floated='right' as='a' href='https://github.com/TheMuonNeutrino/thermodynamic-cycle-solver'>\r\n                            <Icon name='github'/> GitHub\r\n                        </Button>\r\n                        <Button floated='right'\r\n                            onClick = {()=>{setShowAbout(!showAbout);setShowHelp(false)}}\r\n                        >\r\n                            About\r\n                        </Button>\r\n                        <Popup\r\n                            on='click'\r\n                            trigger={\r\n                                <Button floated='right'>\r\n                                    <Icon name='question'/> Help\r\n                                </Button>\r\n                            }\r\n                            content={<p>Keyboard shortcuts: <br/>Ctrl+Z to undo <br/> Ctrl + Y to redo</p>}\r\n                            onOpen={()=>{setShowHelp(true);setShowAbout(false)}}\r\n                            onClose={()=>{setShowHelp(false)}}\r\n                            size='large'\r\n                        />\r\n                        <br/>\r\n                    </Header>                \r\n                </div>\r\n            </div>\r\n            {showAbout ?\r\n                <MathJax.Provider>\r\n                    <div className='ui container' style={{fontSize: 'large'}}>\r\n                        <p>\r\n                            This app is designed to provide insight into various thermodynamic cycles, providing\r\n                            an interactive interface within which to explore these. The thermodynamic model used\r\n                            applies specifically to ideal gases.\r\n                        <br/>\r\n                            Most central to this are the pair of contraint equations used in computing the position\r\n                            of the points:\r\n                        </p>\r\n                        <MathJax.Node formula='PV=nRT'/>\r\n                        <MathJax.Node \r\n                            formula={`exp(\\\\frac{\\\\Delta S}{n}) = \\\\left(  \\\\frac{T_2}{T_1}  \\\\right)^{C_v}\r\n                            \\\\left(  \\\\frac{V_2}{V_1}  \\\\right)^R = \\\\left(  \\\\frac{P_2}{P_1}  \\\\right)^{C_V} \r\n                            \\\\left(  \\\\frac{V_2}{V_1}  \\\\right)^{(C_V + R)}`}\r\n                        />\r\n                        <p>\r\n                            where <MathJax.Node inline formula='P'/> is pressure, <MathJax.Node inline formula='V'/> is\r\n                            volume, <MathJax.Node inline formula='T'/> is temperature, <MathJax.Node inline formula='n'/> is\r\n                            the number of moles in the system, <MathJax.Node inline formula='R'/> is the gas constant, &nbsp;\r\n                            <MathJax.Node inline formula='\\Delta S'/> is the entropy change for the step and &nbsp;\r\n                            <MathJax.Node inline formula='C_v' /> is the isochoric heat capacity of the system.\r\n                        </p>\r\n                        <p>\r\n                            Additionally, constraints must be applied to each step which correspond to its type and\r\n                            take the form of a conserved quantity: pressure for isobaric steps, volume for isochoric steps,\r\n                            temperature for isothermal steps and entropy for isentropic steps. When updating a particular\r\n                            point, only its neighbours are repositioned. To compute the new position of the neighbouring\r\n                            point, two parameters of the set <MathJax.Node inline formula='\\{P,V,T,S\\}'/> must be computed for\r\n                            the point. One of these will be contributed by the conserved quantity from the prior step and\r\n                            the other by the conserved quantity for the subsequent step.\r\n                        </p>\r\n                        <p>\r\n                            Consider for example: A &#8594; B is an isobaric step, B &#8594; C is an isentropic step. When A is\r\n                            repositioned, the pressure at B will be set equal to the pressure at A, while the entropy\r\n                            change between B and C will be set to zero. The second equation above will then be used to\r\n                            compute the volume and temperature at B, populating <MathJax.Node inline formula='P_2'/>,\r\n                            <MathJax.Node inline formula='V_2'/> and <MathJax.Node inline formula='T_2'/>\r\n                            with the values at point C.\r\n                        </p>\r\n                        <p>\r\n                            This project is built in ReactJS. Notably, the following libraries were used: react-redux,\r\n                            react-mathjax, semantic-ui-react, react-sortablejs and victory (charting and data visualisation).\r\n                            <br/>\r\n                            Copyright &#169; Marek Cottingham 2021. \r\n                            <br/>Licensed under GNU GPL-3.0-or-later.\r\n                        </p>\r\n\r\n                    </div>\r\n                </MathJax.Provider>\r\n            :null}\r\n            <div className='grid-container'>\r\n                <div className='grid-itemA'>\r\n                    <Popup\r\n                        trigger={\r\n                            <ThermodynamicsPlot \r\n                                xkey='volume'\r\n                                ykey='pressure'\r\n                                xlabel='Volume (m^3)'\r\n                                ylabel='Pressure (Pa)'\r\n                                dataPointsGenerator={generatePlotLineDataPV}\r\n                            />\r\n\r\n                        }\r\n                        content={\r\n                            <p>\r\n                                Drag and drop points on either graph in order to modify the cycle\r\n                                <br/>\r\n                                <b>Close the help screen first</b>\r\n                            </p>\r\n                        }\r\n                        open={showHelp}\r\n                        position='left center'\r\n                        size='large'\r\n                    />\r\n                </div>\r\n                <div className='grid-itemB'>\r\n                    <ThermodynamicsPlot \r\n                        xkey='entropy'\r\n                        ykey='temperature'\r\n                        xlabel='Entropy (J/K)'\r\n                        ylabel='Temperature (K)'\r\n                        dataPointsGenerator={generatePlotLineDataST}\r\n                    />\r\n                </div>\r\n                <div className='grid-itemMain'>\r\n                    <StepList\r\n                        showHelp={showHelp}\r\n                        setShowHelp={setShowHelp}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import Thermodynamics from \"../Thermodynamics\"\r\nimport { hasDefinedKey, hasUndefinedKey } from \"../Utils\"\r\nimport { getPreviousIndex, getNextIndex } from \"../Utils\"\r\n\r\nconst initialState = {\r\n    system:{\r\n        moles: 1,\r\n        isochoricHeatCapacity: 5/2 * Thermodynamics.R\r\n    },\r\n    steps: []\r\n}\r\n\r\ninitialState.steps.push({\r\n        pressure: 10000,\r\n        volume: 1,\r\n        temperature: 10000/Thermodynamics.R,\r\n        staticEntropy: 0,\r\n        type: 'none'\r\n})\r\n\r\nconst _applySubsequentPointConstraintsAtIndex = (\r\n        state, index, applyConstraintsFunc, getSubsequentIndex\r\n    ) => {\r\n    var step = {...state.steps[index]}\r\n    step = Thermodynamics.solvePVT(step, state.system)\r\n    var subStepIndex = getSubsequentIndex(index, state)\r\n    var subsubStepIndex = getSubsequentIndex(subStepIndex,state)\r\n    var subStep = state.steps[subStepIndex]\r\n    var subsubStep = state.steps[subsubStepIndex]\r\n    var subStepConstrained = applyConstraintsFunc(step, subStep,subsubStep,state.system)\r\n    if (subStepConstrained === subStep) {\r\n        return [{\r\n            ...state, steps: _steps_replaceAtIndex(state.steps, index, step)\r\n        }, true]\r\n    }\r\n    subStep = Thermodynamics.solvePVT(subStepConstrained, state.system)\r\n    return [{\r\n        ...state, steps: _steps_replaceAtIndex(\r\n            _steps_replaceAtIndex(state.steps, subStepIndex, subStep),\r\n            index, step)\r\n    }, false]\r\n}\r\n\r\nconst _applyNextPointConstraintsAtIndex = (state, index) => {\r\n    return _applySubsequentPointConstraintsAtIndex(\r\n        state,index,_applyStepTypeConstraintsToNextPoint,getNextIndex\r\n    )\r\n}\r\n\r\nconst _applyPreviousPointConstraintsAtIndex = (state, index) => {\r\n    return _applySubsequentPointConstraintsAtIndex(\r\n        state,index,_applyStepTypeConstraintsToPreviousPoint,getPreviousIndex\r\n    )\r\n}\r\nconst steps_update = (state,action) => {\r\n    checkStepTypeIsValid(action.newStep)\r\n    \r\n    state = {...state, steps: _steps_replaceAtIndex(\r\n        state.steps, action.index, action.newStep\r\n    )}\r\n\r\n    var startIndex = action.index\r\n    state = _operateOnNextUntilCondition(\r\n        state,startIndex,\r\n        _applyNextPointConstraintsAtIndex,\r\n        _generateRTSorSignalCondition(startIndex)\r\n    )\r\n\r\n    state = _operateOnPreviousUntilCondition(\r\n        state,startIndex,\r\n        _applyPreviousPointConstraintsAtIndex,\r\n        _generateRTSorSignalCondition(startIndex)\r\n    )\r\n\r\n    state = _forEachStep(state,(state,index)=>{\r\n        return _recalculateEntropyAtIndex(state, index)\r\n    })\r\n    \r\n    state = _forEachStep(state,(state,index)=>{\r\n        return _calculateHeatWorkAtIndex(state,index)\r\n    })\r\n    state = _calculateHeatWorkTotal(state)\r\n    return state\r\n}\r\n\r\nconst _steps_replaceAtIndex = (steps,index,newStep) => {\r\n    return([\r\n        ...steps.slice(0,index),\r\n        newStep,\r\n        ...steps.slice(index+1)\r\n    ])\r\n}\r\n\r\nconst steps_add = (steps,system,index,newStep) => {\r\n    newStep = Thermodynamics.solvePVT(newStep,system)\r\n    if (index === steps.length || index === -1){\r\n        return([\r\n            ...steps,\r\n            newStep\r\n        ])\r\n    }\r\n    return([\r\n        ...steps.slice(0,index),\r\n        newStep,\r\n        ...steps.slice(index)\r\n    ])\r\n}\r\n\r\nconst steps_delete = (steps,index) => {\r\n    if (steps.length > 1){\r\n        return([\r\n            ...steps.slice(0,index),\r\n            ...steps.slice(index+1)\r\n        ])\r\n    }\r\n    return steps\r\n}\r\n\r\nconst thermodynamicSystemReducer = (state=initialState,action) => {\r\n    if (action.type === 'steps/update'){return steps_update(state,action)}\r\n    if (action.type === 'steps/updateProperties'){\r\n        action = _markUndefinedOneUnspecifiedPvtParameter(action)\r\n        return steps_update(\r\n            state,\r\n            {\r\n                index: action.index, \r\n                newStep:{\r\n                    ...state.steps[action.index],...action.newProperties\r\n                }\r\n            }\r\n        )\r\n    }\r\n    if (action.type === 'steps/add'){return {...state,\r\n        steps: steps_add(state.steps,state.system,action.index,action.newStep)\r\n    }}\r\n    if (action.type === 'steps/delete'){\r\n        state = {...state,\r\n            steps: steps_delete(state.steps,action.index)\r\n        }\r\n        return _updateAllSteps(state)\r\n    }\r\n    if (action.type === 'system/setParams'){\r\n        var newState = {...state, system: {...state.system, ...action.params}}\r\n        newState = _forEachStep(newState,_recalculateTemperatureAtIndex)\r\n        newState = _updateAllSteps(newState)\r\n        return newState\r\n    }\r\n    if (action.type === 'steps/setAll'){\r\n        state = {...state, steps: action.newSteps}\r\n        return _updateAllSteps(state)\r\n    }\r\n    return state\r\n}\r\n\r\nexport default thermodynamicSystemReducer\r\n\r\nfunction _updateAllSteps(newState) {\r\n    \r\n    return _forEachStep(newState,\r\n        (state, index) => {\r\n            return steps_update(\r\n                state, { index: index, newStep: state.steps[index] }\r\n            )\r\n        }\r\n    )\r\n}\r\n\r\nfunction checkStepTypeIsValid(newStep) {\r\n    if (hasDefinedKey(newStep, 'type')) {\r\n        if (!['none', 'isobaric', 'isochoric', 'isothermal', 'isentropic'].includes(newStep.type)) {\r\n            throw new Error(\r\n                `Step type must be one of 'none','isobaric','isochoric','isothermal' or 'isentropic'\r\n                not ${newStep.type}`\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nfunction _generateRTSorSignalCondition(startIndex) {\r\n    return (state, index, breakCondition) => {\r\n        const returnedToStartIndex = index === startIndex && breakCondition !== undefined\r\n        if (returnedToStartIndex) {return false} \r\n        if (breakCondition) { return false} \r\n        return true\r\n    }\r\n}\r\n\r\nfunction _recalculateEntropyAtIndex(state, index) {\r\n    var step = {...state.steps[index]}\r\n    var nextIndex = getNextIndex(index,state)\r\n    var nextStep = {...state.steps[nextIndex]}\r\n    const isUnfixedEntropyStepType = (\r\n        step.type !== 'none' &&\r\n        state.steps.length !== 1\r\n    )\r\n    if (isUnfixedEntropyStepType) {\r\n        if (step.type === 'isentropic'){\r\n            step.entropyChange = 0\r\n        }else{\r\n            step.entropyChange = _getEntropyChange(step, nextStep, state)\r\n        }\r\n        var stepEntropy = _getStepEntropy(step)\r\n        nextStep.entropy = stepEntropy + step.entropyChange\r\n    }\r\n    return {\r\n        ...state, steps: _steps_replaceAtIndex(\r\n            _steps_replaceAtIndex(state.steps, nextIndex, nextStep),\r\n            index, step)\r\n    }\r\n}\r\n\r\nfunction _calculateHeatWorkAtIndex(state,index){\r\n    var step = {...state.steps[index]}\r\n    var nextIndex = getNextIndex(index,state)\r\n    var nextStep = {...state.steps[nextIndex]}\r\n    var system = state.system\r\n    //TODO Add tests for this section\r\n    if (step.type === 'isochoric'){\r\n        step.work = 0\r\n        step.heat = system.moles * system.isochoricHeatCapacity * (nextStep.temperature - step.temperature)\r\n    }\r\n    if (step.type === 'isothermal'){\r\n        step.heat = state.system.moles * Thermodynamics.R * step.temperature * Math.log(\r\n            nextStep.volume / step.volume\r\n        )\r\n        step.work = step.heat\r\n    }\r\n    if (step.type === 'isobaric'){\r\n        step.work = (nextStep.volume - step.volume)*step.pressure\r\n        step.heat = system.moles * system.isochoricHeatCapacity * (nextStep.temperature - step.temperature) + step.work\r\n    }\r\n    if (step.type === 'isentropic'){\r\n        step.work = -system.moles * system.isochoricHeatCapacity * (nextStep.temperature - step.temperature)\r\n        step.heat = 0\r\n    }\r\n    return {...state, steps: _steps_replaceAtIndex(state.steps,index,step)}\r\n}\r\n\r\nfunction _calculateHeatWorkTotal(state){\r\n    var system = {...state.system}\r\n    system.heatIn = 0\r\n    system.heatOut = 0\r\n    system.workIn = 0\r\n    system.workOut = 0\r\n    _forEachStep(state,(state,index)=>{\r\n        var step = state.steps[index]\r\n        if (step.heat>0){\r\n            system.heatIn += step.heat\r\n        }else(\r\n            system.heatOut -= step.heat\r\n        )\r\n        if (step.work>0){\r\n            system.workOut += step.work\r\n        }else(\r\n            system.workIn -= step.work\r\n        )\r\n        return state\r\n    })\r\n    system.workNet = system.workOut - system.workIn\r\n    system.heatNet = system.heatOut - system.heatIn\r\n    system.refrigerationCOP = -system.heatIn / system.workNet\r\n    system.heatingCOP = -system.heatOut / system.workNet\r\n    system.thermalEfficiency = system.workNet / system.heatIn\r\n    return {...state, system: system}\r\n}\r\n\r\nfunction _getStepEntropy(step) {\r\n    return hasDefinedKey(step, 'staticEntropy') ?\r\n        step.staticEntropy : step.entropy\r\n}\r\n\r\nfunction _applyStepTypeConstraintsToSubsequentPoint(\r\n        step,subStep,subsubStep,refStep,secondRefStep,system\r\n    ){\r\n    if (refStep.type === 'isobaric' && step.pressure !== subStep.pressure) {\r\n        subStep = {...subStep,  pressure: step.pressure}\r\n        if (['none','isobaric','isochoric'].includes(secondRefStep.type)){\r\n            subStep.temperature = undefined\r\n        }\r\n        if (secondRefStep.type === 'isothermal'){subStep.volume = undefined}\r\n        subStep = _applyConstraintsFromIsentropicAsNeighbour(secondRefStep,subsubStep, subStep, system,\r\n            {pressure_2: subStep.pressure}    \r\n        )\r\n    }\r\n    if (refStep.type === 'isochoric' && step.volume !== subStep.volume){\r\n        subStep = {...subStep, volume: step.volume}\r\n        if (['none','isobaric','isochoric'].includes(secondRefStep.type)){\r\n            subStep.temperature = undefined\r\n        }\r\n        if (secondRefStep.type === 'isothermal'){subStep.pressure = undefined}\r\n        subStep = _applyConstraintsFromIsentropicAsNeighbour(secondRefStep,subsubStep, subStep, system,\r\n            {volume_2: subStep.volume}    \r\n        )\r\n    }\r\n    if (refStep.type === 'isothermal' && step.temperature !== subStep.temperature){\r\n        subStep = {...subStep, temperature: step.temperature}\r\n        if (['none','isobaric','isothermal'].includes(secondRefStep.type)){\r\n            subStep.volume = undefined\r\n        }\r\n        if (secondRefStep.type === 'isochoric'){subStep.pressure = undefined}\r\n        subStep = _applyConstraintsFromIsentropicAsNeighbour(secondRefStep,subsubStep, subStep, system,\r\n            {temperature_2: subStep.temperature}    \r\n        )\r\n    }\r\n    if (refStep.type === 'isentropic'){\r\n        var entropyChangeBefore = Thermodynamics.solveEntropyChange({\r\n            volume_1: step.volume,\r\n            volume_2: subStep.volume,\r\n            pressure_1: step.pressure,\r\n            pressure_2: subStep.pressure,\r\n            temperature_1: step.temperature,\r\n            temperature_2: subStep.temperature,\r\n        },system).entropyChange\r\n        if (\r\n            Math.abs(entropyChangeBefore) > 0.000005\r\n        ){\r\n            const stepEntropyConstraints = {\r\n                entropyChange: 0,\r\n                volume_1: step.volume,\r\n                pressure_1:step.pressure,\r\n            }\r\n            if (['none','isentropic','isothermal'].includes(secondRefStep.type)){\r\n                stepEntropyConstraints.temperature_2 = subStep.temperature\r\n            }\r\n            if (secondRefStep.type === 'isobaric'){\r\n                stepEntropyConstraints.pressure_2 = subStep.pressure\r\n            }\r\n            if (secondRefStep.type === 'isochoric'){\r\n                stepEntropyConstraints.volume_2 = subStep.volume\r\n            }\r\n\r\n            const stepSolution = Thermodynamics.solveEntropyChange(stepEntropyConstraints,system)\r\n            subStep = {...subStep,\r\n                pressure: stepSolution.pressure_2, \r\n                volume: stepSolution.volume_2,\r\n                temperature: stepSolution.temperature_2,\r\n            }\r\n        }\r\n    }\r\n    return subStep\r\n}\r\n\r\nfunction _applyConstraintsFromIsentropicAsNeighbour(secondRefStep,subsubStep, subStep, system, constraint) {\r\n    if (secondRefStep.type === 'isentropic'){\r\n        var entropyStepConstraints = {\r\n            ...constraint,\r\n            volume_1: subsubStep.volume,\r\n            pressure_1: subsubStep.pressure,\r\n            entropyChange: 0\r\n        }\r\n        var entropyStepRes = Thermodynamics.solveEntropyChange(entropyStepConstraints, system)\r\n        subStep = {...subStep,pressure: undefined}\r\n        subStep.pressure = entropyStepRes.pressure_2\r\n        subStep.temperature = entropyStepRes.temperature_2\r\n        subStep.volume = entropyStepRes.volume_2\r\n    }\r\n    return subStep\r\n}\r\n\r\nfunction _applyStepTypeConstraintsToNextPoint(step, nextStep,nextNextStep,system) {\r\n    return _applyStepTypeConstraintsToSubsequentPoint(step,nextStep,nextNextStep,step,nextStep,system)\r\n}\r\n\r\nfunction _applyStepTypeConstraintsToPreviousPoint(step, previousStep,previousPreviousStep,system) {\r\n    return _applyStepTypeConstraintsToSubsequentPoint(\r\n        step,previousStep,previousPreviousStep,previousStep,previousPreviousStep,system\r\n    )\r\n}\r\n\r\nfunction _markUndefinedOneUnspecifiedPvtParameter(action) {\r\n    if (\r\n        hasUndefinedKey(action.newProperties,'temperature') ||\r\n        hasUndefinedKey(action.newProperties,'pressure') ||\r\n        hasUndefinedKey(action.newProperties,'volume')\r\n    ){\r\n        return action\r\n    }\r\n    const [hasT, hasV, hasP] = Thermodynamics.flagsForKeysInPoint(action.newProperties)\r\n    const numberOfConstraints = hasT + hasV + hasP\r\n    if (numberOfConstraints === 2) {\r\n        ['volume', 'temperature', 'pressure'].forEach((key) => {\r\n            if (!hasDefinedKey(action.newProperties,key)) {\r\n                action.newProperties[key] = undefined\r\n            }\r\n        })\r\n    }\r\n    if (numberOfConstraints === 1) {\r\n        if (!hasT) {\r\n            action.newProperties.temperature = undefined\r\n        } else {\r\n            action.newProperties.volume = undefined\r\n        }\r\n    }\r\n    return action\r\n}\r\n\r\nfunction _forEachStep(state,lambda){\r\n    //lambda should accept state and index as parameters and return modified version of state\r\n    for (var index=0; index<state.steps.length; index++){\r\n        state = lambda(state,index)\r\n    }\r\n    return state\r\n}\r\n\r\nfunction _recalculateTemperatureAtIndex(state, index) {\r\n    return {\r\n        ...state, steps: _steps_replaceAtIndex(\r\n            state.steps,\r\n            index,\r\n            Thermodynamics.solvePVT(\r\n                { ...state.steps[index], temperature: undefined }, state.system)\r\n        )\r\n    }\r\n}\r\n\r\nfunction _getEntropyChange(step, nextStep, state) {\r\n    return Thermodynamics.solveEntropyChange({\r\n        pressure_1: step.pressure,\r\n        volume_1: step.volume,\r\n        temperature_1: step.temperature,\r\n        pressure_2: nextStep.pressure,\r\n        volume_2: nextStep.volume,\r\n        temperature_2: nextStep.temperature,\r\n    }, state.system).entropyChange\r\n}\r\n\r\nfunction _operateOnSubsequentUntilCondition(state,startIndex,lambda,condition,subsequentIndexFinder){\r\n    // lambda is a function of the form [state, breakCondition] = lambda(state,index)\r\n    // condition is a funcion of the form (continue) = condition(state,index,breakCondition)\r\n    var index = startIndex\r\n    var breakCondition\r\n    while (condition(state,index,breakCondition)){\r\n        [state, breakCondition] = lambda(state,index)\r\n        index = subsequentIndexFinder(index,state)\r\n    }\r\n    return state\r\n}\r\n\r\nfunction _operateOnNextUntilCondition (state,startIndex, lambda, condition){\r\n    return _operateOnSubsequentUntilCondition(state,startIndex,lambda,condition,getNextIndex)\r\n}\r\n\r\nfunction _operateOnPreviousUntilCondition (state,startIndex, lambda, condition){\r\n    return _operateOnSubsequentUntilCondition(state,startIndex,lambda,condition,getPreviousIndex)\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js'\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport thermodynamicSystemReducer from './reducers'\nimport { setPreset } from './actions/setPreset.js';\nimport undoable, { ActionCreators as UndoActionCreators } from 'redux-undo';\nimport { hasDefinedKey } from './Utils.js';\n\nconst store = createStore(undoable(thermodynamicSystemReducer,{groupBy: (action,currentState,previousHistory)=>{\n  if (hasDefinedKey(action,'groupBy')){\n    if (action.groupBy === null){return null}\n    return `${action.groupBy.index}-${action.groupBy.xkey}`\n  }\n  return null\n}}))\nstore.dispatch(setPreset('carnotCycle'))\nstore.dispatch(UndoActionCreators.clearHistory())\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}